events {
    worker_connections 1024;
}

http {
    upstream hotel_service {
        server hotel-service-1:8001;
        server hotel-service-2:8001;
    }

    upstream search_service {
        server search-service-1:8002;
        server search-service-2:8002;
    }

    upstream user_service {
        server user-service-1:8003;
        server user-service-2:8003;
    }

    server {
        listen 80;

        # Health check
        location /health {
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }

        # Hotel Service - reescribir /api/hotels -> /hotels
        location /api/hotels {
            rewrite ^/api/hotels(.*)$ /hotels$1 break;
            proxy_pass http://hotel_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Search Service - reescribir /api/search -> /search
        location /api/search {
            rewrite ^/api/search(.*)$ /search$1 break;
            proxy_pass http://search_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Auth Service - reescribir /api/auth -> /auth
        location /api/auth {
            rewrite ^/api/auth(.*)$ /auth$1 break;
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # User Service - reescribir /api/users -> /users
        location /api/users {
            rewrite ^/api/users(.*)$ /users$1 break;
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Reservations - reescribir /api/reservations -> /reservations
        location /api/reservations {
            rewrite ^/api/reservations(.*)$ /reservations$1 break;
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Availability - reescribir /api/availability -> /availability
        location /api/availability {
            rewrite ^/api/availability(.*)$ /availability$1 break;
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}